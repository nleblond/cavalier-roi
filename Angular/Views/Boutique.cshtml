@model dynamic
    
@{
    try { ViewBag.Title = Model.ContenusZones[0].Titre; } catch { }
    try { ViewBag.Description = Model.ContenusZones[0].Texte; } catch { }
    Layout = "~/Views/Shared/_LayoutFrontOffice.cshtml";
}

<div class="boutique">

    @Html.Partial("~/Views/Shared/Zones.cshtml", (@Model.ContenusZones) as List<WS.Models.OUT.Contenu>)

    <div class="clear"></div>

    <div class="avant">
        <div class="filtre">
            Categorie : <select>
                <option value="" @(Model.CategorieId == null ? "selected='selected'" : "")></option>
                <option value="1" @(Model.CategorieId == 1 ? "selected='selected'" : "")>Jeux d'échecs</option>
                <option value="2" @(Model.CategorieId == 2 ? "selected='selected'" : "")>Pendules</option>
                <option value="3" @(Model.CategorieId == 3 ? "selected='selected'" : "")>Livres</option>
                <option value="4" @(Model.CategorieId == 4 ? "selected='selected'" : "")>Logiciels</option>
                <option value="0" @(Model.CategorieId == 0 ? "selected='selected'" : "")>Divers</option>
            </select>
        </div>
    </div>

    <div class="clear"></div>

    @if ((Model != null) && (Model.Produits.Count > 0))
    {

        for (Int32 _Index = 0; _Index < Model.Produits.Count; _Index++)
        {

            <div class="produit @((_Index + 1) % 2 == 0 ? "last" : "")">

                <div class="titre">@Model.Produits[_Index].Libelle</div>
                <div class="clear"></div>

                <input type="hidden" class="poids" value="@Model.Produits[_Index].Poids" />
                <input type="hidden" class="hauteur" value="@Model.Produits[_Index].Hauteur" />
                <input type="hidden" class="largeur" value="@Model.Produits[_Index].Largeur" />
                <input type="hidden" class="longueur" value="@Model.Produits[_Index].Longueur" />
                
                @if (!String.IsNullOrEmpty(Model.Produits[_Index].Visuel))
                {
                    <a class="visuel" href="@Angular.Constants.IMG_URL/Produits/@Model.Produits[_Index].Id/@Model.Produits[_Index].Visuel" target="_blank" title="Cliquer pour agrandir">
                        <img src="@Angular.Constants.IMG_URL/Produits/@Model.Produits[_Index].Id/@Model.Produits[_Index].Visuel" />
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.Produits[_Index].Image))
                {
                    <a class="image" href="@Angular.Constants.IMG_URL/Produits/@Model.Produits[_Index].Id/@Model.Produits[_Index].Image" target="_blank" title="Cliquer pour agrandir">
                        <img src="@Angular.Constants.IMG_URL/Produits/@Model.Produits[_Index].Id/@Model.Produits[_Index].Image" />
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.Produits[_Index].Logo))
                {
                    <img class="logo" src="@Angular.Constants.IMG_URL/Produits/@Model.Produits[_Index].Id/@Model.Produits[_Index].Logo" />
                }

                @if (Model.Produits[_Index].Descriptif != null)
                {
                    <span class="descriptif texte">@Html.Raw((Model.Produits[_Index].Descriptif as String).ToBR())</span>
                }
                
                <div class="formule texte">
                    <div class="disponibilite">
                        @{
                            if (Model.Produits[_Index].Stock >= 1)
                            {
                                <span>EN STOCK</span>
                            }
                            else if (Model.Produits[_Index].Stock <= 0)
                            {
                                <span>EN RUPTURE</span>
                            }
                        }
                    </div>
                    <div class="prix">&nbsp;&nbsp;@Tools.Euro(Model.Produits[_Index].Prix)&nbsp;&nbsp;</div>
                    <div class="quantite">
                        <input type="hidden" value="@Model.Produits[_Index].Stock" />
                        @{
                            if (Model.Produits[_Index].Stock >= 1)
                            {
                                <img src="@Angular.Constants.IMG_URL/boutons/Moins.svg" title="Moins" class="moins" />
                                <input type="text" value="1" />
                                <img src="@Angular.Constants.IMG_URL/boutons/Plus.svg" title="Plus" class="plus" />
                            }
                        }
                    </div>
                    @if (Model.Produits[_Index].Stock >= 1)
                    {
                        <div class="reserver"><input type="button" title="Ajouter" data-produitid="@Model.Produits[_Index].Id" class="ajouter" value="Ajouter" /></div>
                    }
                </div>
            </div>
        }
    }

    <div class="clear"></div>

    @Html.Partial("~/Views/Shared/PartenariatsEncarts.cshtml", (@Model.ContenusPartenariatsEncarts) as List<WS.Models.OUT.Contenu>)

    <div class="clear"></div>

</div>

<script language="javascript" src="@Angular.Constants.ROOT_URL/Scripts/Views/Boutique.js" type="text/javascript"></script>
