@model dynamic

@{
    try { ViewBag.Title = Model.ContenusZones[0].Titre; } catch { }
    try { ViewBag.Description = Model.ContenusZones[0].Texte; } catch { }
    Layout = "~/Views/Shared/_LayoutFrontOffice.cshtml";
}

<div class="moncompte">

    @Html.Partial("~/Views/Shared/Zones.cshtml", (@Model.ContenusZones) as List<WS.Models.OUT.Contenu>)

    <div class="clear"></div>

    @if (Model.Connected == true && Model.Eleve != null)
    {
        <div class="infos">
            <h2>MES INFORMATIONS</h2>
            <table cellpadding="0" cellspacing="0" border="0" class="texte">
                <tr>
                    <td>Nom&nbsp;:&nbsp;</td>
                    <td><input type="text" class="nom" maxlength="50" value="@Model.Eleve.Nom" /></td>
                </tr>
                <tr>
                    <td>Prénom&nbsp;:&nbsp;</td>
                    <td><input type="text" class="prenom" maxlength="50" value="@Model.Eleve.Prenom" /></td>
                </tr>
                <tr>
                    <td>Date de naissance&nbsp;:&nbsp;</td>
                    <td><input type="text" class="naissance" maxlength="10" readonly="readonly" value="@Model.Eleve.DtNaissance" /></td>
                </tr>
                <tr>
                    <td>Sexe&nbsp;:&nbsp;</td>
                    <td>
                        <select class="sexe">
                            <option value=""></option>
                            <option value="F" @(Model.Eleve.Sexe == "F" ? "selected=selected" : "")>F</option>
                            <option value="M" @(Model.Eleve.Sexe == "M" ? "selected=selected" : "")>H</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Téléphone fixe&nbsp;:&nbsp;</td>
                    <td><input type="text" class="fixe" maxlength="10" value="@Model.Eleve.Fixe" /></td>
                </tr>
                <tr>
                    <td>Téléphone portable&nbsp;:&nbsp;</td>
                    <td><input type="text" class="portable" maxlength="10" value="@Model.Eleve.Portable" /></td>
                </tr>
                <tr>
                    <td>Numéro de license&nbsp;:&nbsp;</td>
                    <td><input type="text" class="license" maxlength="20" value="@Model.Eleve.License" /></td>
                </tr>
                <tr>
                    <td>Classement&nbsp;:&nbsp;</td>
                    <td><input type="text" class="classement" maxlength="6" value="@Model.Eleve.Classement" /></td>
                </tr>
                <tr>
                    <td>Club&nbsp;:&nbsp;</td>
                    <td><input type="text" class="club" maxlength="255" value="@Model.Eleve.Club" /></td>
                </tr>
            </table>

            <table cellpadding="0" cellspacing="0" border="0" class="texte" style="display:@(Model.Eleve.Administration == true ? "block" : "none");">
                <tr class="rouge">
                    <td>Commentaire&nbsp;:&nbsp;</td>
                    <td><textarea rows="6" cols="38" class="commentaire">@Model.Eleve.Commentaire</textarea></td>
                </tr>
                <tr class="rouge">
                    <td>Suivi&nbsp;:&nbsp;</td>
                    <td><textarea rows="6" cols="38" class="suivi">@Model.Eleve.Suivi</textarea></td>
                </tr>
            </table>

            <table cellpadding="0" cellspacing="0" border="0" class="texte">
                <tr>
                    <td>Email/Identifiant&nbsp;:&nbsp;</td>
                    <td><input type="text" class="email" maxlength="255" value="@Model.Eleve.Email" /></td>
                </tr>
                <tr>
                    <td>Mot de passe&nbsp;:&nbsp;</td>
                    <td><input type="password" class="password" maxlength="20" value="@Model.Eleve.Password" /></td>
                </tr>
                <tr style="display:none;">
                    <td colspan="2"><img class="photo" src="@Constants.IMG_URL/Eleves/@Model.Eleve.Id/@Model.Eleve.Photo" /></td>
                </tr>
                <tr style="display:none;">
                    <td>Photo&nbsp;:&nbsp;</td>
                    <td><input type="file" value="@Model.Eleve.Photo" /></td>
                </tr>
                <tr>
                    <td><input type="hidden" class="id" value="@Model.Eleve.Id" /></td>
                    <td class="last"><input type="button" class="valider" title="Valider" value="Valider" /></td>
                </tr>
            </table>

        </div>

        <div class="clear"></div>
    }

    @if (Model.Eleve != null && Model.Eleve.Commandes != null & Model.Eleve.Commandes.Count > 0)
    {
        <div class="commandes">
            <h2>MES COMMANDES</h2>
            <table cellpadding="0" cellspacing="0" border="0" class="texte">
                <thead>
                    <tr>
                        <th class="first">N°</th>
                        <th>Date</th>
                        <th>Produit</th>
                        <th style="white-space:nowrap;">Prix</th>
                        <th class="last">Statut</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (WS.Models.OUT.Commande _CurrentC in Model.Eleve.Commandes)
                    {
                        <tr>
                            <td class="first">@_CurrentC.Id</td>
                            <td>@_CurrentC.DtCreation</td>
                            <td>
                                @foreach (WS.Models.OUT.Ligne _CurrentL in _CurrentC.Lignes)
                                {
                                    <div>
                                        <span>@_CurrentL.Quantite</span>
                                        <span>&nbsp;x&nbsp;</span>
                                        <span>@_CurrentL.Produit.Libelle</span>
                                    </div>
                                }
                            </td>
                            <td title="@_CurrentC.ReferenceTransaction">@Tools.Euro(_CurrentC.Prix)</td>
                            <td class="last">@_CurrentC.Statut.Libelle</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="clear"></div>
    }

    @if (Model.Eleve != null && Model.Eleve.Participations != null & (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 3).Count > 0)
    {
        <div class="cours">
            <h2>MES COURS</h2>
            <table cellpadding="0" cellspacing="0" border="0" class="formules texte">
                <tbody>
                    @foreach (WS.Models.OUT.Participation _CurrentP in (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 3))
                    {
                        <tr class="formule">
                            <td class="first">
                                <span>@_CurrentP.Evenement.Libelle</span>
                                <table cellpadding="0" cellspacing="0" border="0" class="dates">
                                    <thead>
                                        <tr>
                                            <th class="first">Date</th>
                                            <th>Début</th>
                                            <th>Fin</th>
                                            <th class="last"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (WS.Models.OUT.Reservation _CurrentR in (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id))
                                        {
                                            <tr class="reservation" title="@_CurrentR.PaymentId">
                                                <td class="first">@_CurrentR.Jour</td>
                                                <td>@(_CurrentR.Creneau.Replace("Creneau", "").Left(2))H</td>
                                                <td>@(_CurrentR.Creneau.Replace("Creneau", "").Right(2))H</td>
                                                <td class="last">
                                                    @if (Model.Eleve.Administration == true)
                                                    {
                                                        <div>
                                                            <input type="hidden" class="id" value="@_CurrentR.Id" />
                                                            <span class="rouge supprimer" title="Supprimer">✖</span>
                                                        </div>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                            <td class="last actions left">
                                <div>
                                    @if (Model.Eleve.Administration == true)
                                    {
                                        <input type="text" class="quantite" title="Quantité disponible" value="@_CurrentP.Quantite" />
                                    }
                                    else
                                    {
                                        <span>@(_CurrentP.Quantite)</span>
                                    }
                                    H
                                    @*
                                        @if (_CurrentP.Evenement.Duree != null)
                                        {
                                            <span>sur @(_CurrentP.Evenement.Duree)H</span>
                                        }
                                    *@
                                    @if (Model.Eleve.Administration == true)
                                    {
                                        <input type="hidden" class="id" value="@_CurrentP.Id" />
                                        <span class="rouge crediter" title="Créditer">✔</span>
                                    }
                                </div>
                                <div class="br5"></div>
                                <input type="button" class="reserver" title="Réserver" value="Réserver" style="display:@(_CurrentP.Quantite != 0 ? "block" : "none");"
                                       data-evenementid="@_CurrentP.Evenement.Id"
                                       data-evenementlibelle="@_CurrentP.Evenement.Libelle"
                                       data-eleveid="@Model.Eleve.Id"
                                       data-quantite="@_CurrentP.Quantite"
                                       data-jour="@DateTime.Now.ToString("dd/MM/yyyy")"
                                       data-prix="" />
                                @if (Model.Eleve.Administration == true)
                                {
                                    <div>
                                        <input type="hidden" class="id" value="@_CurrentP.Id" />
                                        <span class="rouge supprimer" title="Supprimer">✖</span>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    @if (Model.Eleve != null && Model.Eleve.Participations != null & (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 0).Count > 0)
    {
        <div class="stages">
            <h2>MES STAGES</h2>
            <table cellpadding="0" cellspacing="0" border="0" class="formules texte">
                <tbody>
                    @foreach (WS.Models.OUT.Participation _CurrentP in (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 0))
                    {
                        <tr class="formule">
                            <td class="first">
                                <div>@_CurrentP.Evenement.Libelle</div>
                                <table cellpadding="0" cellspacing="0" border="0" class="dates">
                                    <thead>
                                        <tr>
                                            <th class="first">Date</th>
                                            <th>Début</th>
                                            <th>Fin</th>
                                            <th class="last"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            String _Jour = null;
                                            String _PaymentId = null;
                                        }

                                        @foreach (WS.Models.OUT.Reservation _CurrentR in (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id).OrderBy(p => p.Jour).ThenBy(p => p.PaymentId))
                                        {
                                            if (_Jour != _CurrentR.Jour)
                                            {
                                                _Jour = _CurrentR.Jour;
                                                _PaymentId = _CurrentR.PaymentId;

                                                String _HeureDebut = (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id && p.Jour == _Jour && p.PaymentId == _PaymentId).OrderBy(p => p.Creneau).FirstOrDefault().Creneau.Replace("Creneau", "").Left(2) + "H";
                                                String _HeureFin = (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id && p.Jour == _Jour && p.PaymentId == _PaymentId).OrderByDescending(p => p.Creneau).FirstOrDefault().Creneau.Replace("Creneau", "").Right(2) + "H";

                                                <tr class="reservation" title="@_CurrentR.PaymentId">
                                                    <td class="first">@_CurrentR.Jour</td>
                                                    <td>@_HeureDebut</td>
                                                    <td>@_HeureFin</td>
                                                    <td class="last"></td>
                                                </tr>

                                            }
                                            else
                                            {
                                                if (_PaymentId != _CurrentR.PaymentId)
                                                {
                                                    _PaymentId = _CurrentR.PaymentId;

                                                    String _HeureDebut = (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id && p.Jour == _Jour && p.PaymentId == _PaymentId).OrderBy(p => p.Creneau).FirstOrDefault().Creneau.Replace("Creneau", "").Left(2) + "H";
                                                    String _HeureFin = (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id && p.Jour == _Jour && p.PaymentId == _PaymentId).OrderByDescending(p => p.Creneau).FirstOrDefault().Creneau.Replace("Creneau", "").Right(2) + "H";

                                                    <tr class="reservation" title="@_CurrentR.PaymentId">
                                                        <td class="first">@_CurrentR.Jour</td>
                                                        <td>@_HeureDebut</td>
                                                        <td>@_HeureFin</td>
                                                        <td class="last"></td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </td>
                            <td class="last actions">
                                @if (Model.Eleve.Administration == true)
                                {
                                    <div>
                                        <input type="hidden" class="id" value="@_CurrentP.Id" />
                                        <span class="rouge supprimer" title="Supprimer">✖</span>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    }

    <div class="clear"></div>

    @if (Model.Eleve != null && Model.Eleve.Participations != null & (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 1).Count > 0)
    {
        <div class="tournois">
            <h2>MES TOURNOIS</h2>
            <table cellpadding="0" cellspacing="0" border="0" class="texte">
                <thead>
                    <tr>
                        <th class="first">Libellé</th>
                        <th>Début</th>
                        <th>Fin</th>
                        <th class="last"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (WS.Models.OUT.Participation _CurrentP in (Model.Eleve.Participations as List<WS.Models.OUT.Participation>).FindAll(p => p.Evenement.Typologie.Id == 1))
                    {
                        String _PaymentId = (Model.Eleve.Reservations as List<WS.Models.OUT.Reservation>).FindAll(p => p.Evenement.Id == _CurrentP.Evenement.Id).FirstOrDefault().PaymentId;

                        <tr class="formule" title="@_PaymentId">
                            <td class="first">@_CurrentP.Evenement.Libelle</td>
                            <td>@_CurrentP.Evenement.DtDebut</td>
                            <td>@_CurrentP.Evenement.DtFin</td>
                            <td class="last actions">
                                @if (Model.Eleve.Administration == true)
                                {
                                    <div>
                                        <input type="hidden" class="id" value="@_CurrentP.Id" />
                                        <span class="rouge supprimer" title="Supprimer">✖</span>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <div class="clear"></div>

    @Html.Partial("~/Views/Shared/PartenariatsEncarts.cshtml", (@Model.ContenusPartenariatsEncarts) as List<WS.Models.OUT.Contenu>)

    <div class="clear"></div>

</div>

<script language="javascript" src="@Constants.ROOT_URL/Scripts/Views/MonCompte.js" type="text/javascript"></script>